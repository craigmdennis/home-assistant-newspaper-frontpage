---
description: Formatting rules for git commits
globs: 
alwaysApply: false
---
You are writing a Git commit message and staging files. Follow these rules strictly:

1. Commit Format
- Use Conventional Commits: type(scope): short description
- Types include: feat, fix, chore, refactor, docs, style, test, perf, ci, build, revert
- Use imperative mood (e.g., add support for..., fix bug...)
- Subject: max 50 characters
- Optional body: wrap at 72 characters, explain what changed and why
- Include BREAKING CHANGE: if needed
- Add issue references in the footer if applicable

2. Atomic Commits
- Only include changes related to one logical task
- Exclude unrelated edits (e.g., formatting, TODOs)
- If multiple concerns exist, split into separate commits

3. File Selection
- Stage only files relevant to the described change
- Do not include unrelated or incidental changes
- If unsure, prompt the user to confirm staged files

Output should include:
- A commit message (title and optional body)
- A summary of which files will be committed and why

Be concise, accurate, and helpful to future readers.